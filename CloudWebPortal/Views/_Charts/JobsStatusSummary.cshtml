<!--
  Copyright 2011,2012 CLOUDS Laboratory, The University of Melbourne
   
   This file is part of Cloud Web Portal (CWP).
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

@using CloudWebPortal.Models
@model Cloud
@{
    Layout = null;

    String masterHostIP = ViewBag.masterHostIP;
    int masterPort = ViewBag.masterPort;
}

<div class="block-content">
    <h1>
        Jobs Status Summary</h1>
    <div class="block-controls">
        <ul class="controls-buttons">
            <li id="Widget_Link"><a href="#" onclick="openModalWindow_ForWidget('@HttpContext.Current.User.Identity.Name','JobsStatusSummary','_Charts',6,@Model.CloudId)" title="Add This Widget To The Dashboard">
                <img src="@Url.Content("~/Content/images/icons/fugue/plus-circle.png")" width="16" height="16"></a></li>
        </ul>
    </div>
    <div id="chart-JobsStatusSummary-@Model.CloudId" style="width: 100%; height: 400px"></div>
    <div class="block-footer">
        <button onclick="drawJobsStatusSummary_@(Model.CloudId)()">Show Jobs Status</button>
    </div>
</div>


<script type="text/javascript">
    var chart_Jobs_@(Model.CloudId); // global

    function drawJobsStatusSummary_@(Model.CloudId)() {
        var options = {
            chart: {
                renderTo: 'chart-JobsStatusSummary-@(Model.CloudId)',
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
            },
            title: {
                text: ''
            },
            tooltip: {
                formatter: function() {
                    return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
                }
            },
            plotOptions: {
                 pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                       enabled: true,
                       formatter: function() {
                          return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
                       }
                    }
                 }
              },
            series: []
        };

        var series = {
            type: 'pie',
            name: 'Jobs Status Summary',
            data: []
        };

        var masterHostIP = '@(masterHostIP)';
        var masterPort = @(masterPort);

        var URL = '/_Charts/GetCSVDataNoDates?ChartSeriesType=JobsStatusSummary&masterHostIP=' + masterHostIP + '&masterPort=' + masterPort;

        $.get(URL, function (data) {

            // Split the lines
            var lines = data.split('\n');

            // Iterate over the lines and add categories or series
            $.each(lines, function (lineNo, line) {
                
                var items = line.split(',');
                if(lineNo == 0)
                {
                    options.title.text = 'Jobs Status Summary For @(Model.CloudName) ('+items[0]+': '+items[1]+')';
                }
                else
                {
                    if(items[0] == "Completed")
                    {
                        series.data.push([items[0],parseFloat(items[1])]);
                    }
                    else
                    {
                        var dataNonCompleted = {
                           name: items[0],    
                           y: parseFloat(items[1]),
                           sliced: true,
                           selected: true
                        };
                        series.data.push(dataNonCompleted);
                    }
                }
            });
            
            options.series.push(series);
            // Create the chart
            chart_Jobs_@(Model.CloudId) = new Highcharts.Chart(options);
        });
    }
</script>